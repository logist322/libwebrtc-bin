on: 
  schedule:
    - cron:  '03 * * * *'

jobs:
  check-chrome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Parse current version
        run: |
          grep 'WEBRTC_SEMANTIC_VERSION' ./VERSION |
          cut -d'=' -f2 |
          {
            read version;
            echo "CURRENT_VERSION=${version}" >> $GITHUB_ENV;
          }

      - name: Get last stable version and hash
        uses: actions/github-script@v6
        id: webrtc-commit
        with:
          script: |
            const https = require('https');

            await new Promise(resolve => {
              https.get('https://chromiumdash.appspot.com/fetch_releases?channel=Stable&platform=Linux&num=1&offset=0', (resp) => {
                let data = '';

                resp.on('data', (chunk) => {
                  data += chunk;
                });

                resp.on('end', () => {
                  resolve(data);
                });

              })
            }).then(data => {
                const commit = JSON.parse(data)[0];
                core.exportVariable('LAST_VERSION', commit.version);
                core.exportVariable('WEBRTC_HASH', commit.hashes.webrtc);
              });

      - name: Check if the versions are different
        run: |
          if $LAST_VERSION == $CURRENT_VERSION
          then
            echo "The latest version ($CURRENT_VERSION) is already released!"
            exit 1
          fi
          echo "There is a new version!"

      - name: Patch ./VERSION
        run: |
          grep -n 'WEBRTC_VERSION' ./VERSION |
          cut -d':' -f1 |
          {
            read line;
            sed -i "${line}s|.*|WEBRTC_VERSION=${LAST_VERSION}|g" ./VERSION;
          }

          grep -n 'WEBRTC_COMMIT' ./VERSION |
          cut -d':' -f1 |
          {
            read line;
            sed -i "${line}s|.*|WEBRTC_COMMIT=${WEBRTC_HASH}|g" ./VERSION;
          }

          echo "${{ secrets.GITHUB_TOKEN }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: GitHub <noreply@github.com>